From: Qiang Wei <qiang.wei@suse.com>
Subject: [PATCH] Add int type cast to resolve gcc issue for option
  Wformat=2.

In ncruses 6.3 version, there is type complain for function wprintw
  when gcc has option -Wformat=2.

Signed-off-by: Qiang Wei <qiang.wei@suse.com>
--- a/staprun/monitor.c	2022-03-09 06:45:30.534000000 +0000
+++ b/staprun/monitor.c	2022-03-09 06:48:49.804000000 +0000
@@ -448,12 +448,12 @@
       if (active_window == 0)
         wattron(status, A_BOLD);
       wprintw(status, "\n%*s\t%*s\t%*s\t%*s\t%*s\t%*s\t%s\n",
-              width[p_index], HIGHLIGHT("index", p_index, comp_fn_index),
-              width[p_state], HIGHLIGHT("state", p_state, comp_fn_index),
-              width[p_hits], HIGHLIGHT("hits", p_hits, comp_fn_index),
-              width[p_min], HIGHLIGHT("min", p_min, comp_fn_index),
-              width[p_avg], HIGHLIGHT("avg", p_avg, comp_fn_index),
-              width[p_max], HIGHLIGHT("max", p_max, comp_fn_index),
+              (int)width[p_index], HIGHLIGHT("index", p_index, comp_fn_index),
+              (int)width[p_state], HIGHLIGHT("state", p_state, comp_fn_index),
+              (int)width[p_hits], HIGHLIGHT("hits", p_hits, comp_fn_index),
+              (int)width[p_min], HIGHLIGHT("min", p_min, comp_fn_index),
+              (int)width[p_avg], HIGHLIGHT("avg", p_avg, comp_fn_index),
+              (int)width[p_max], HIGHLIGHT("max", p_max, comp_fn_index),
               HIGHLIGHT("name", p_name, comp_fn_index));
       if (active_window == 0)
         wattroff(status, A_BOLD);
@@ -466,17 +466,17 @@
           json_object *probe, *field;
           probe = json_object_array_get_idx(jso_probe_list, i);
           json_object_object_get_ex(probe, "index", &field);
-          wprintw(status, "%*s\t", width[p_index], json_object_get_string(field));
+          wprintw(status, "%*s\t", (int)width[p_index], json_object_get_string(field));
           json_object_object_get_ex(probe, "state", &field);
-          wprintw(status, "%*s\t", width[p_state], json_object_get_string(field));
+          wprintw(status, "%*s\t", (int)width[p_state], json_object_get_string(field));
           json_object_object_get_ex(probe, "hits", &field);
-          wprintw(status, "%*s\t", width[p_hits], json_object_get_string(field));
+          wprintw(status, "%*s\t", (int)width[p_hits], json_object_get_string(field));
           json_object_object_get_ex(probe, "min", &field);
-          wprintw(status, "%*s\t", width[p_min], json_object_get_string(field));
+          wprintw(status, "%*s\t", (int)width[p_min], json_object_get_string(field));
           json_object_object_get_ex(probe, "avg", &field);
-          wprintw(status, "%*s\t", width[p_avg], json_object_get_string(field));
+          wprintw(status, "%*s\t", (int)width[p_avg], json_object_get_string(field));
           json_object_object_get_ex(probe, "max", &field);
-          wprintw(status, "%*s\t", width[p_max], json_object_get_string(field));
+          wprintw(status, "%*s\t", (int)width[p_max], json_object_get_string(field));
           getyx(status, discard, cur_x);
           json_object_object_get_ex(probe, "name", &field);
           wprintw(status, "%.*s", max_cols-cur_x-1, json_object_get_string(field));
